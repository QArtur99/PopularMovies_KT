apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'

def keystorePropFileSigning = rootProject.file("local.properties")
def keystorePropSigning = new Properties()
keystorePropSigning.load(new FileInputStream(keystorePropFileSigning))

android {
    signingConfigs {
        config {
            keyAlias keystorePropSigning['keyAlias']
            keyPassword keystorePropSigning['keyPassword']
            storeFile file(keystorePropSigning['storeFile'])
            storePassword keystorePropSigning['storePassword']
        }
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.qartf.popularmovies"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 7
        versionName "1.06"
        testInstrumentationRunner "com.qartf.popularmovies.utility.CustomTestRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            multiDexEnabled = true

            buildTypes.each {
                it.buildConfigField 'String', 'THE_MOVIE_DB_API_TOKEN', keystorePropSigning['MyTheMovieDBApiToken']
            }
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
    implementation "androidx.appcompat:appcompat:$versions.support"
    implementation "androidx.core:core-ktx:$versions.core_ktx"
    implementation "com.google.android.material:material:$versions.material"
    implementation "androidx.fragment:fragment-ktx:$versions.fragment"
    implementation "androidx.preference:preference:$versions.preference"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$versions.swiperefreshlayout"

    // Room
    implementation "androidx.room:room-runtime:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"

    // Paging
    implementation "androidx.paging:paging-runtime-ktx:$versions.paging"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine"

    // Retrofit for networking
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$versions.coroutines_adapter"

    // Moshi for parsing the JSON format
    implementation "com.squareup.moshi:moshi:$versions.moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$versions.moshi"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.navigation"

    // Glide
    implementation "com.github.bumptech.glide:glide:$versions.glide"
    kapt "com.github.bumptech.glide:compiler:$versions.glide"

    // Koin
    implementation "org.koin:koin-android:$versions.koin"
    implementation "org.koin:koin-androidx-scope:$versions.koin"
    implementation "org.koin:koin-androidx-viewmodel:$versions.koin"

    // Test
    testImplementation "androidx.arch.core:core-testing:$versions.arch_core"
    testImplementation "com.google.truth:truth:$versions.truth"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutine"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "org.mockito:mockito-inline:$versions.mockito"
    testImplementation "junit:junit:$versions.junit"
    testImplementation "org.robolectric:annotations:$versions.robolectric"
    testImplementation "org.robolectric:robolectric:$versions.robolectric"

    // Android Test
    implementation("androidx.fragment:fragment-testing:$versions.fragment_testing", {
        exclude group: 'androidx.test', module: 'core'
    })
    implementation "androidx.fragment:fragment-ktx:$versions.fragment"
    androidTestImplementation "androidx.annotation:annotation:1.1.0"
    androidTestImplementation "androidx.arch.core:core-testing:$versions.arch_core"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$versions.espresso"
    androidTestImplementation "androidx.test.ext:junit-ktx:$versions.atsl_junit"
    androidTestImplementation "androidx.test.ext:junit:$versions.atsl_junit"
    androidTestImplementation "androidx.test:core:$versions.atsl_core"
    androidTestImplementation "androidx.test:monitor:$versions.atsl_monitor"
    androidTestImplementation "androidx.test:rules:$versions.atsl_rules"
    androidTestImplementation "androidx.test:runner:$versions.atsl_runner"
    androidTestImplementation "com.google.truth:truth:$versions.truth"
    androidTestImplementation "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutine"
    androidTestImplementation("org.koin:koin-test:$versions.koin") { exclude group: 'org.mockito' }
    androidTestImplementation "org.mockito:mockito-android:$versions.mockito"
}
