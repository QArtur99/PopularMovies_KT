/**
 * Shared file between builds so that they can all use the same dependencies and maven repositories.
 *
 * update detector: run gradlew dependencyUpdates
 */

def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 29
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

def versions = [:]
versions.android_gradle_plugin = "3.5.0"
versions.apache_commons = "2.5"
versions.arch_core = "2.1.0-rc01"
versions.atsl_core = "1.3.0-alpha02"
versions.atsl_junit = "1.1.2-alpha02"
versions.atsl_rules = "1.3.0-alpha02"
versions.atsl_runner = "1.3.0-alpha02"
versions.benchmark = "1.0.0-alpha02"
versions.constraint_layout = "2.0.0-beta2"
versions.core_ktx = '1.2.0-alpha03'
versions.coroutine = "1.3.0"
versions.coroutines_adapter = "0.9.2"
versions.dagger = "2.16"
versions.dexmaker = "2.2.0"
versions.diffplug = "3.24.2"
versions.espresso = "3.3.0-alpha02"
versions.fragment = "1.2.0-alpha02"
versions.glide = "4.9.0"
versions.google_gms = "4.3.0"
versions.gradle_versions_plugin = '0.22.0'
versions.hamcrest = "1.3"
versions.junit = "4.12"
versions.kotlin = "1.3.50"
versions.ktlint = "0.33.0"
versions.lifecycle = "2.2.0-alpha03"
versions.material = "1.1.0-alpha09"
versions.mockito = "2.25.0"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.25.0"
versions.mockwebserver = "3.8.1"
versions.moshi = "1.8.0"
versions.navigation = "2.2.0-alpha01"
versions.okhttp_logging_interceptor = "3.9.0"
versions.paging = "2.1.0"
versions.preference = "1.1.0-rc01"
versions.retrofit = "2.6.1"
versions.robolectric = "4.2"
versions.room = "2.2.0-beta01"
versions.rx_android = "2.0.1"
versions.rxjava2 = "2.1.3"
versions.support = "1.1.0-rc01"
versions.swiperefreshlayout = "1.1.0-alpha02"
versions.timber = "4.5.1"
versions.work = "2.1.0-alpha01"
ext.versions = versions

def arch_core = [:]
def atsl = [:]
def coroutines = [:]
def dagger = [:]
def espresso = [:]
def glide = [:]
def kotlin = [:]
def lifecycle = [:]
def mockito = [:]
def moshi = [:]
def navigation = [:]
def retrofit = [:]
def room = [:]
def support = [:]
def work = [:]

arch_core.runtime = "androidx.arch.core:core-runtime:$versions.arch_core"
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
atsl.core = "androidx.test:core:$versions.atsl_core"
atsl.ext_junit = "androidx.test.ext:junit:$versions.atsl_junit"
atsl.rules = "androidx.test:rules:$versions.atsl_rules"
atsl.runner = "androidx.test:runner:$versions.atsl_runner"
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine"
coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutine"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.reflect = "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
mockito.core = "org.mockito:mockito-core:$versions.mockito"
moshi.kotlin = "com.squareup.moshi:moshi-kotlin:$versions.moshi"
moshi.runtime = "com.squareup.moshi:moshi:$versions.moshi"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
retrofit.coroutines_adapter = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$versions.coroutines_adapter"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.moshi = "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.runtime = "androidx.room:room-runtime:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
support.annotations = "androidx.annotation:annotation:$versions.support"
support.app_compat = "androidx.appcompat:appcompat:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
support.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
support.design = "com.google.android.material:material:$versions.material"
support.fragment_runtime = "androidx.fragment:fragment:$versions.fragment"
support.fragment_runtime_ktx = "androidx.fragment:fragment-ktx:$versions.fragment"
support.fragment_testing = "androidx.fragment:fragment-testing:$versions.fragment"
support.preference = "androidx.preference:preference:$versions.preference"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.swiperefreshlayout = "androidx.swiperefreshlayout:swiperefreshlayout:$versions.swiperefreshlayout"
support.v4 = "androidx.legacy:legacy-support-v4:$versions.support"
work.firebase = "androidx.work:work-firebase:$versions.work"
work.runtime = "androidx.work:work-runtime:$versions.work"
work.runtime_ktx = "androidx.work:work-runtime-ktx:$versions.work"
work.testing = "androidx.work:work-testing:$versions.work"

def deps = [:]
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.arch_core = arch_core
deps.atsl = atsl
deps.benchmark = "androidx.benchmark:benchmark:$versions.benchmark"
deps.benchmark_gradle = "androidx.benchmark:benchmark-gradle-plugin:$versions.benchmark"
deps.coroutines = coroutines
deps.dagger = dagger
deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.diffplug = "com.diffplug.spotless:spotless-plugin-gradle:$versions.diffplug"
deps.espresso = espresso
deps.glide = glide
deps.gradle_versions_plugin = "com.github.ben-manes:gradle-versions-plugin:$versions.gradle_versions_plugin"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.junit = "junit:junit:$versions.junit"
deps.kotlin = kotlin
deps.lifecycle = lifecycle
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.mockito = mockito
deps.moshi = moshi
deps.navigation = navigation
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp_logging_interceptor"
deps.paging_ktx = "androidx.paging:paging-runtime-ktx:$versions.paging"
deps.retrofit = retrofit
deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"
deps.room = room
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.support = support
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.work = work

ext.deps = [:]
ext.deps = deps

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
}
ext.addRepos = this.&addRepos
